# -*- Mode: cmake -*-
project(dependencies-mongoc)

include(ExternalProject)


# Create targets for downloading, configuring, building and installing mongoc.
# This also compiles the buntled libbson.
get_filename_component(toolchain_file ${CMAKE_TOOLCHAIN_FILE} ABSOLUTE)
ExternalProject_Add(
  mongoc
  PREFIX "${SOFT_DEPS_SOURCE_DIR}/mongoc"

  GIT_REPOSITORY    "https://github.com/mongodb/mongo-c-driver.git"
  GIT_TAG           "1.5.3"

  UPDATE_COMMAND    ""
  PATCH_COMMAND     ""

  SOURCE_DIR        "${SOFT_DEPS_SOURCE_DIR}/mongoc"
  CONFIGURE_COMMAND cd ${SOFT_DEPS_SOURCE_DIR}/mongoc && ./autogen.sh --host=${MINGW_NAME} --prefix=${SOFT_DEPS_INSTALL_PREFIX} --with-libbson=bundled

  BUILD_COMMAND     cd ${SOFT_DEPS_SOURCE_DIR}/mongoc && make

  INSTALL_COMMAND   cd ${SOFT_DEPS_SOURCE_DIR}/mongoc && make install
  )
#  CMAKE_ARGS
#    -DCMAKE_TOOLCHAIN_FILE=${toolchain_file}
#    -DCMAKE_INSTALL_PREFIX=${SOFT_DEPS_INSTALL_PREFIX}



# Make sure that mongoc is installed before compiling tests
# Hmm, seems not really work when compiling with -j
ExternalProject_Add_StepTargets(mongoc mongoc-install
  DEPENDEES install)

add_custom_target(mongoc-dummy
  DEPENDS mongoc-install)


# Calling find_package(MONGOC) here would fail, since mongoc is first
# build at compile time.
#
# We therefore manually set the variables that find_package(MONGOC)
# would have set.
#
# We assume that we are cross-compiling with mingw64 for win64 on linux,
# which produces static libraries.
set(MONGOC_FOUND TRUE)
set(MONGOC_INCLUDE_DIR "${SOFT_DEPS_INSTALL_PREFIX}/include"
  CACHE PATH "" FORCE)
set(MONGOC_LIBRARIES "${SOFT_DEPS_INSTALL_PREFIX}/lib/libmongoc.a"
  CACHE FILEPATH "" FORCE)


# Mongoc also builds mongoc
set(BSON_FOUND TRUE)
set(BSON_INCLUDE_DIR "${SOFT_DEPS_INSTALL_PREFIX}/include"
  CACHE PATH "" FORCE)
set(BSON_LIBRARIES "${SOFT_DEPS_INSTALL_PREFIX}/lib/libbson.a"
  CACHE FILEPATH "" FORCE)
