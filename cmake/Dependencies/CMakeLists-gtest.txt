# -*- Mode: cmake -*-
project(dependencies-gtest)

include(ExternalProject)


# Create targets for downloading, configuring, building and installing gtest
get_filename_component(toolchain_file ${CMAKE_TOOLCHAIN_FILE} ABSOLUTE)
ExternalProject_Add(
  gtest
  PREFIX "${SOFT_DEPS_SOURCE_DIR}/gtest"

  GIT_REPOSITORY "https://github.com/google/googletest.git"
  GIT_TAG "master"

  UPDATE_COMMAND ""
  PATCH_COMMAND ""
  SOURCE_DIR "${SOFT_DEPS_SOURCE_DIR}/gtest"
  CMAKE_ARGS
    -DCMAKE_TOOLCHAIN_FILE=${toolchain_file}
    -DCMAKE_INSTALL_PREFIX=${SOFT_DEPS_INSTALL_PREFIX}
  )


# Make sure that gtest is installed before compiling tests
# Hmm, seems not really work when compiling with -j
ExternalProject_Add_StepTargets(gtest gtest-install
  DEPENDEES install)

add_custom_target(gtest-dummy
  DEPENDS gtest-install)


# Calling find_package(GTest) here would fail, since gtest is first
# build at compile time.
#
# We therefore manually set the variables that find_package(GTest)
# would have set.
#
# We assume that we are cross-compiling with mingw64 for win64 on linux,
# which produces static libraries.
set(GTEST_FOUND TRUE)
set(GTEST_INCLUDE_DIR "${SOFT_DEPS_INSTALL_PREFIX}/include"
  CACHE PATH "" FORCE)
set(GTEST_LIBRARY "${SOFT_DEPS_INSTALL_PREFIX}/lib/libgtest.a"
  CACHE FILEPATH "" FORCE)
set(GTEST_MAIN_LIBRARY "${SOFT_DEPS_INSTALL_PREFIX}/lib/libgtest_main.a"
  CACHE FILEPATH "" FORCE)
