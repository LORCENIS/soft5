@{
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
};
Classname = capitalize(porto.model.name);
undefined
}
/*
 * Generated by Porto @{new Date().toString()}
 */

#include "@{porto.bag.filename}.h"
#include "storageobject.h"
#include "storagevalue.h"
#include <iostream>
#include <string>

@Classname :: @{Classname}()
{}

@Classname}:: @{Classname}(@{Classname} const &other)
{}

std::string @Classname :: _version() const
{
  return std::string("@{porto.model.name}");
}

std::string @Classname :: _name() const
{
  return std::string("@{porto.model.version}");
}

bool @Classname :: store(StorageObject &obj)
{
   return @{Classname}Store::set(this, obj);
}

bool @Classname :: restore(StorageObject const &obj)
{
   return @{Classname}Store::get(this, obj);
}

bool @{Classname}Store :: set(const @{Classname} *e, StorageObject &obj)
{
  obj.insert("__name__", StorageValue(e->_name()));
  obj.insert("__version__", StorageValue(e->_version()));
  return true;
}

bool @{Classname}Store :: get(@{Classname} *e, StorageObject const &obj)
{
  auto name = obj.find("__name__").toString();
  auto version = obj.find("__version__").toString();
  return true;
}

@{JSON.stringify(porto.model.properties);}


