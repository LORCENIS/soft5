@{
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
};
function typeToCppType(type) {
  var typemap = {
    "integer": "int",
    "int"    : "int",
    "double" : "double",
    "string" : "std::string",
    "boolean": "bool"
  };
  return typemap[type];
}
propertyList = porto.model.properties.map(function(prop){
  return typeToCppType(prop.type) + " " + prop.name + ";";
}).join("\n  ");
Classname = capitalize(porto.model.name);
undefined
}
/*
 * Generated by Porto @{new Date().toString()} 
 */

#ifndef @{porto.bag.filename.toUpperCase()}_H_DEF
#define @{porto.bag.filename.toUpperCase()}_H_DEF

#include "ientity.h"
#include <string>

class @Classname : public IEntity
{
public:
  @{Classname}();
  @{Classname}(@{Classname} const &other);
  virtual ~@{Classname}();

  static std::string _version();
  static std::string _name();
  @propertyList

protected:
   virtual bool store(StorageObject &storageObject);
   virtual bool restore(StorageObject const &storageObject);
};

class @{Classname}Store
{
public:
   static bool set(@{Classname} const *e, StorageObject &obj);
   static bool get(@{Classname} *e, StorageObject const &obj);
};

#endif
